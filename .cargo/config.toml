[alias]
bw = "b --target wasm32-unknown-unknown"
cw = "c --target wasm32-unknown-unknown"
bwindows = "b --target=x86_64-pc-windows-gnu"
# cargo +nightly -Z build-std bwindows

# # [build]
# # rustc-wrapper = "/opt/homebrew/bin/sccache"

# Add the contents of this file to `config.toml` to enable "fast build" configuration. Please read the notes below.

# NOTE: For maximum performance, build using a nightly compiler
# If you are using rust stable, remove the "-Zshare-generics=y" below.

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-Clink-arg=-fuse-ld=lld", "-Zshare-generics=y"]

[target.x86_64-apple-darwin]
rustflags = [
    # "-C",
    # "link-arg=-fuse-ld=/usr/local/opt/llvm/bin/ld64.lld",
    "-Zshare-generics=y",
]

[target.aarch64-apple-darwin]
rustflags = [
    "-C",
    "link-arg=-fuse-ld=/opt/homebrew/opt/llvm/bin/ld64.lld",
    "-Zshare-generics=y",
		"-C",
		"target-cpu=apple-m2"
]

# [target.x86_64-pc-windows-msvc]
# linker = "rust-lld.exe"
# rustflags = ["-Zshare-generics=n"]

# Optional: Uncommenting the following improves compile times, but reduces the amount of debug info to 'line number tables only'
# In most cases the gains are negligible, but if you are on macos and have slow compile times you should see significant gains.
[profile.dev]
debug = 1

# ## Setting up windows build env
# [target.x86_64-pc-windows-msvc]
# # linker = "/usr/local/bin/lld"
# linker = "/opt/homebrew/opt/llvm/bin/ld64.lld"
# rustflags = [
#   "-Lnative=/Users/calebyates/.xwin/crt/lib/x86_64",
#   "-Lnative=/Users/calebyates/.xwin/sdk/lib/um/x86_64",
#   "-Lnative=/Users/calebyates/.xwin/sdk/lib/ucrt/x86_64"
# ]

[target.x86_64-pc-windows-gnu]
linker = "x86_64-w64-mingw32-gcc"

# git clone --depth=1 https://github.com/llvm/llvm-project
# cd llvm-project
# mkdir build
# cd build
# cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=lld -DCMAKE_INSTALL_PREFIX=/usr/local ../llvm
# sudo make -j8 install # adjust `-j10` based on your number of CPU cores
# cd ../../; rm -rf llvm-project # delete the git repo and build files to free disk space